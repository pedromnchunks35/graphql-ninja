{"ast":null,"code":"var _jsxFileName = \"/home/pedromn35/Desktop/Back-end landscape/ninja-graphql/client/src/components/BookList.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\n/* IMPORT OUR GQL */\n\nimport { useQuery } from '@apollo/client';\n/* OUR QUERY */\n\nimport { getBooksQuery } from '../queries/queries';\n/* COMPONENT BOOK LIST */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookList = () => {\n  _s();\n\n  /* MAKE THE QUERY AND DESTRUCT IT */\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(getBooksQuery);\n  /* IF IT IS LOADING */\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 25\n  }, this);\n  /* IF IT TROHWS AN ERROR */\n\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 23\n  }, this);\n  return (\n    /*#__PURE__*/\n\n    /* LIST DIV */\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"books-list\",\n        children: data.books.map(_ref => {\n          let {\n            __typename,\n            name,\n            id\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: name\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  );\n};\n/* EXPORT IT */\n\n\n_s(BookList, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = BookList;\nexport default BookList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"names":["React","Component","useQuery","getBooksQuery","BookList","loading","error","data","books","map","__typename","name","id"],"sources":["/home/pedromn35/Desktop/Back-end landscape/ninja-graphql/client/src/components/BookList.js"],"sourcesContent":["import React, { Component } from 'react'\n\n/* IMPORT OUR GQL */\nimport {useQuery} from '@apollo/client';\n/* OUR QUERY */\nimport {getBooksQuery} from '../queries/queries'\n\n/* COMPONENT BOOK LIST */\nconst BookList = () =>{\n    /* MAKE THE QUERY AND DESTRUCT IT */\n    const { loading, error, data } = useQuery(getBooksQuery);\n    /* IF IT IS LOADING */\n    if (loading) return <p>Loading...</p>;\n    /* IF IT TROHWS AN ERROR */\n    if (error) return <p>Error :</p>;\n    \n    return (\n      /* LIST DIV */\n      <div>\n      <ul id='books-list'>\n          {/* MAPPING ID AND NAME */}\n          {data.books.map(({__typename,name,id}) =>{\n          return (<div>\n          <li key={id}>\n          {/* RETURN OF THE FOLLOWING */} \n          {name}\n    \n          </li>\n          </div>)\n\n          })}\n          </ul> \n      </div>\n    )\n\n}\n/* EXPORT IT */\nexport default BookList"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA;;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA;;AACA,SAAQC,aAAR,QAA4B,oBAA5B;AAEA;;;;AACA,MAAMC,QAAQ,GAAG,MAAK;EAAA;;EAClB;EACA,MAAM;IAAEC,OAAF;IAAWC,KAAX;IAAkBC;EAAlB,IAA2BL,QAAQ,CAACC,aAAD,CAAzC;EACA;;EACA,IAAIE,OAAJ,EAAa,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;EACb;;EACA,IAAIC,KAAJ,EAAW,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;EAEX;IAAA;;IACE;IACA;MAAA,uBACA;QAAI,EAAE,EAAC,YAAP;QAAA,UAEKC,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAe,QAAyB;UAAA,IAAxB;YAACC,UAAD;YAAYC,IAAZ;YAAiBC;UAAjB,CAAwB;UACzC,oBAAQ;YAAA,uBACR;cAAA,UAECD;YAFD,GAASC,EAAT;cAAA;cAAA;cAAA;YAAA;UADQ;YAAA;YAAA;YAAA;UAAA,QAAR;QAQC,CATA;MAFL;QAAA;QAAA;QAAA;MAAA;IADA;MAAA;MAAA;MAAA;IAAA;EAFF;AAmBH,CA3BD;AA4BA;;;GA5BMR,Q;UAE+BF,Q;;;KAF/BE,Q;AA6BN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}