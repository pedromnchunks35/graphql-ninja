{"ast":null,"code":"var _jsxFileName = \"/home/pedromn35/Desktop/Back-end landscape/ninja-graphql/client/src/components/BookDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\n/* IMPORT OUR GQL */\n\nimport { useQuery } from '@apollo/client';\n/* OUR QUERY */\n\nimport { getBook } from '../queries/queries';\n/* BOOK DETAILS HOOK */\n\n/* THIS SELECTED ARGUMENT IS THE PROP THAT WE SEND BY THE BOOK LIST Component(THE PARENT) */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BookDetails = Selected => {\n  _s();\n\n  /*  THE QUERY THAT WE WANT TO USE */\n  const [_getBook, {\n    loading,\n    error,\n    data\n  }] = useQuery(getBook);\n\n  if (Selected.bookId.selected != null) {\n    _getBook({\n      variables: {\n        id: Selected.bookId.selected\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"book-details\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Output book details here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BookDetails, \"8Rz/JvmNvSrKPOXuOjYuoQVUV/s=\", false, function () {\n  return [useQuery];\n});\n\n_c = BookDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookDetails\");","map":{"version":3,"names":["React","Component","useQuery","getBook","BookDetails","Selected","_getBook","loading","error","data","bookId","selected","variables","id"],"sources":["/home/pedromn35/Desktop/Back-end landscape/ninja-graphql/client/src/components/BookDetails.js"],"sourcesContent":["import React, { Component } from 'react'\n\n/* IMPORT OUR GQL */\nimport {useQuery} from '@apollo/client';\n/* OUR QUERY */\nimport {getBook} from '../queries/queries'\n/* BOOK DETAILS HOOK */\n/* THIS SELECTED ARGUMENT IS THE PROP THAT WE SEND BY THE BOOK LIST Component(THE PARENT) */\nexport const BookDetails = (Selected) => {\n/*  THE QUERY THAT WE WANT TO USE */ \n const[_getBook,{loading , error , data}]= useQuery(getBook);\n if(Selected.bookId.selected!=null){\n     _getBook({\n        variables:{\n            id: Selected.bookId.selected\n        }\n     })\n }\n  return (\n    <div id='book-details'>\n    <p>Output book details here</p>\n    </div>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA;;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA;;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA;;AACA;;;AACA,OAAO,MAAMC,WAAW,GAAIC,QAAD,IAAc;EAAA;;EACzC;EACC,MAAK,CAACC,QAAD,EAAU;IAACC,OAAD;IAAWC,KAAX;IAAmBC;EAAnB,CAAV,IAAqCP,QAAQ,CAACC,OAAD,CAAlD;;EACA,IAAGE,QAAQ,CAACK,MAAT,CAAgBC,QAAhB,IAA0B,IAA7B,EAAkC;IAC9BL,QAAQ,CAAC;MACNM,SAAS,EAAC;QACNC,EAAE,EAAER,QAAQ,CAACK,MAAT,CAAgBC;MADd;IADJ,CAAD,CAAR;EAKH;;EACA,oBACE;IAAK,EAAE,EAAC,cAAR;IAAA,uBACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EADA;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAfM;;GAAMP,W;UAE8BF,Q;;;KAF9BE,W"},"metadata":{},"sourceType":"module"}