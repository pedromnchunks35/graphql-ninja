{"ast":null,"code":"var _jsxFileName = \"/home/pedromn35/Desktop/Back-end landscape/ninja-graphql/client/src/components/BookList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n/* IMPORT OUR GQL */\n\nimport { useQuery } from '@apollo/client';\n/* OUR QUERY */\n\nimport { getBooksQuery } from '../queries/queries';\n/* BOOK DETAILS */\n\nimport { BookDetails } from './BookDetails';\n/* COMPONENT BOOK LIST */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookList = () => {\n  _s();\n\n  /* USESTATE OF VAR CLICKED */\n  const [_clicked, setClicked] = useState(\"62ada64e37a717e760b5a111\");\n  /* MAKE THE QUERY AND DESTRUCT IT */\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(getBooksQuery);\n  /* IF IT IS LOADING */\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 25\n  }, this);\n  /* IF IT TROHWS AN ERROR */\n\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 23\n  }, this);\n  return (\n    /*#__PURE__*/\n\n    /* LIST DIV */\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"books-list\",\n        children: data.books.map(_ref => {\n          let {\n            __typename,\n            name,\n            id\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: e => {\n                setClicked({\n                  selected: id\n                });\n              },\n              children: name\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(BookDetails, {\n        bookId: _clicked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  );\n};\n/* EXPORT IT */\n\n\n_s(BookList, \"qjNn7tcwK3zoXcRPWddVhKPBDA0=\", false, function () {\n  return [useQuery];\n});\n\n_c = BookList;\nexport default BookList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"names":["React","useState","useQuery","getBooksQuery","BookDetails","BookList","_clicked","setClicked","loading","error","data","books","map","__typename","name","id","e","selected"],"sources":["/home/pedromn35/Desktop/Back-end landscape/ninja-graphql/client/src/components/BookList.js"],"sourcesContent":["import React, { useState } from 'react'\n\n/* IMPORT OUR GQL */\nimport {useQuery} from '@apollo/client';\n/* OUR QUERY */\nimport {getBooksQuery} from '../queries/queries'\n/* BOOK DETAILS */\nimport { BookDetails } from './BookDetails';\n/* COMPONENT BOOK LIST */\nconst BookList = () =>{\n  \n    /* USESTATE OF VAR CLICKED */\n    const [_clicked,setClicked] = useState(\"62ada64e37a717e760b5a111\");\n    /* MAKE THE QUERY AND DESTRUCT IT */\n    const { loading, error, data } = useQuery(getBooksQuery);\n    /* IF IT IS LOADING */\n    if (loading) return <p>Loading...</p>;\n    /* IF IT TROHWS AN ERROR */\n    if (error) return <p>Error :</p>;\n    \n    \n\n    return (\n      /* LIST DIV */\n      <div>\n      <ul id='books-list'>\n          {/* MAPPING ID AND NAME */}\n          {data.books.map(({__typename,name,id}) =>{\n          return (<div>\n          {/* WE HAVE AN ONCLICK EVENT WHICH UPDATES THE STATE OF THE BOOK SELECTED BY THE USER */}\n          <li key={id} onClick={(e)=>{setClicked({selected: id})}}>\n          {/* RETURN OF THE FOLLOWING */} \n          {name}\n    \n          </li>\n          </div>)\n\n          })}\n          </ul> \n          {/* PASS THE SELECTED BOOK TO THE CHILD COMPONENT BOOK DETAILS */}\n          <BookDetails bookId={_clicked}/>\n      </div>\n    )\n\n}\n/* EXPORT IT */\nexport default BookList"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA;;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA;;AACA,SAAQC,aAAR,QAA4B,oBAA5B;AACA;;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA;;;;AACA,MAAMC,QAAQ,GAAG,MAAK;EAAA;;EAElB;EACA,MAAM,CAACC,QAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,0BAAD,CAAtC;EACA;;EACA,MAAM;IAAEO,OAAF;IAAWC,KAAX;IAAkBC;EAAlB,IAA2BR,QAAQ,CAACC,aAAD,CAAzC;EACA;;EACA,IAAIK,OAAJ,EAAa,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;EACb;;EACA,IAAIC,KAAJ,EAAW,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;EAIX;IAAA;;IACE;IACA;MAAA,wBACA;QAAI,EAAE,EAAC,YAAP;QAAA,UAEKC,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAe,QAAyB;UAAA,IAAxB;YAACC,UAAD;YAAYC,IAAZ;YAAiBC;UAAjB,CAAwB;UACzC,oBAAQ;YAAA,uBAER;cAAa,OAAO,EAAGC,CAAD,IAAK;gBAACT,UAAU,CAAC;kBAACU,QAAQ,EAAEF;gBAAX,CAAD,CAAV;cAA2B,CAAvD;cAAA,UAECD;YAFD,GAASC,EAAT;cAAA;cAAA;cAAA;YAAA;UAFQ;YAAA;YAAA;YAAA;UAAA,QAAR;QASC,CAVA;MAFL;QAAA;QAAA;QAAA;MAAA,QADA,eAgBI,QAAC,WAAD;QAAa,MAAM,EAAET;MAArB;QAAA;QAAA;QAAA;MAAA,QAhBJ;IAAA;MAAA;MAAA;MAAA;IAAA;EAFF;AAsBH,CAnCD;AAoCA;;;GApCMD,Q;UAK+BH,Q;;;KAL/BG,Q;AAqCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}