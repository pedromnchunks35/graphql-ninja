{"ast":null,"code":"var _jsxFileName = \"/home/pedromn35/Desktop/Back-end landscape/ninja-graphql/client/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { onError } from \"@apollo/client/link/error\";\n/* APOLO CLIENT IMPORTS */\n\nimport { ApolloClient, InMemoryCache, ApolloProvider, HttpLink, ApolloLink } from \"@apollo/client\";\n/* CLIENT ITSELF */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: ApolloLink.from([new HttpLink({\n    uri: 'http://localhost:4000/graphql'\n  }), onError(_ref => {\n    let {\n      graphQLErrors,\n      networkError\n    } = _ref;\n\n    if (networkError) {\n      console.log(\"Error\");\n    }\n\n    if (graphQLErrors) {\n      console.log(\"GraphqlErrors\");\n    }\n  })])\n});\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 37,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","App","onError","ApolloClient","InMemoryCache","ApolloProvider","HttpLink","ApolloLink","client","cache","link","from","uri","graphQLErrors","networkError","console","log","root","createRoot","document","getElementById","render"],"sources":["/home/pedromn35/Desktop/Back-end landscape/ninja-graphql/client/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nimport { onError } from \"@apollo/client/link/error\";\n\n/* APOLO CLIENT IMPORTS */\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  HttpLink,\n  ApolloLink\n} from \"@apollo/client\";\n/* CLIENT ITSELF */\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: ApolloLink.from([\n  new HttpLink({uri: 'http://localhost:4000/graphql'}),\n  onError(({graphQLErrors,networkError})=>{\n  if(networkError){\n    console.log(\"Error\");\n  }\n\n  if(graphQLErrors){\n    console.log(\"GraphqlErrors\");\n  }\n\n  })\n\n  ])\n});\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>\n  </React.StrictMode>\n);\n\n\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,SAASC,OAAT,QAAwB,2BAAxB;AAEA;;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,QAJF,EAKEC,UALF,QAMO,gBANP;AAOA;;;AACA,MAAMC,MAAM,GAAG,IAAIL,YAAJ,CAAiB;EAC9BM,KAAK,EAAE,IAAIL,aAAJ,EADuB;EAE9BM,IAAI,EAAEH,UAAU,CAACI,IAAX,CAAgB,CACtB,IAAIL,QAAJ,CAAa;IAACM,GAAG,EAAE;EAAN,CAAb,CADsB,EAEtBV,OAAO,CAAC,QAAgC;IAAA,IAA/B;MAACW,aAAD;MAAeC;IAAf,CAA+B;;IACxC,IAAGA,YAAH,EAAgB;MACdC,OAAO,CAACC,GAAR,CAAY,OAAZ;IACD;;IAED,IAAGH,aAAH,EAAiB;MACfE,OAAO,CAACC,GAAR,CAAY,eAAZ;IACD;EAEA,CATM,CAFe,CAAhB;AAFwB,CAAjB,CAAf;AAkBA,MAAMC,IAAI,GAAGjB,QAAQ,CAACkB,UAAT,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB,CAAb;AACAH,IAAI,CAACI,MAAL,eACE,QAAC,KAAD,CAAO,UAAP;EAAA,uBACA,QAAC,cAAD;IAAgB,MAAM,EAAEb,MAAxB;IAAA,uBACE,QAAC,GAAD;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA;AADA;EAAA;EAAA;EAAA;AAAA,QADF"},"metadata":{},"sourceType":"module"}