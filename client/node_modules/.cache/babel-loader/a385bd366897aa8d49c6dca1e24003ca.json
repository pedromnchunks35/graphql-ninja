{"ast":null,"code":"var _jsxFileName = \"/home/pedromn35/Desktop/Back-end landscape/ninja-graphql/client/src/components/Addbook.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\n/* IMPORT OUR GQL */\n\nimport { useQuery } from '@apollo/client';\n/* IMPORT THE QUERY */\n\nimport { getAuthorsQuery } from '../queries/queries';\n/* THE HOOK */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Addbook = () => {\n  _s();\n\n  const [_formstate, _setForm] = useState(null);\n  /* MAKE THE QUERY AND DESTRUCT IT */\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(getAuthorsQuery);\n  /* IF IT IS LOADING */\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 21\n  }, this);\n  /* IF IT TROHWS AN ERROR */\n\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 19\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"add-book\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Book name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Genre:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Author:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Select the author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this),\n          /* MAPPING THE DATA TO GET THE NAME OF THE AUTHORS */\n          data.authors.map(_ref => {\n            let {\n              name,\n              id\n            } = _ref;\n\n            /* RETURN THE OPTIONS */\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: id,\n              children: name\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 20\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 1\n  }, this);\n};\n/* EXPORT IT */\n\n\n_s(Addbook, \"9riLJp06xXsxgMFqynuCdGI+YyA=\", false, function () {\n  return [useQuery];\n});\n\n_c = Addbook;\nexport default Addbook;\n\nvar _c;\n\n$RefreshReg$(_c, \"Addbook\");","map":{"version":3,"names":["React","Component","useState","useQuery","getAuthorsQuery","Addbook","_formstate","_setForm","loading","error","data","authors","map","name","id"],"sources":["/home/pedromn35/Desktop/Back-end landscape/ninja-graphql/client/src/components/Addbook.js"],"sourcesContent":["import React, { Component, useState } from 'react'\n\n/* IMPORT OUR GQL */\nimport {useQuery} from '@apollo/client';\n/* IMPORT THE QUERY */\nimport {getAuthorsQuery} from '../queries/queries';\n/* THE HOOK */\nconst Addbook = () =>{\n\nconst[_formstate,_setForm]=useState(null);\n\n/* MAKE THE QUERY AND DESTRUCT IT */\nconst { loading, error, data } = useQuery(getAuthorsQuery);\n/* IF IT IS LOADING */\nif (loading) return <p>Loading...</p>;\n/* IF IT TROHWS AN ERROR */\nif (error) return <p>Error :</p>;\n\nreturn (\n<div>\n{/* FORM ADD BOOK */}\n<form id=\"add-book\">\n        {/* div 1 */}\n        <div className=\"field\">\n        {/* label */}\n          <label>Book name:</label>\n          {/* INPUT BOX */}\n          <input type=\"text\"/>\n        </div>\n        {/* div 2 */}\n        <div className=\"field\">\n          {/* label */}\n          <label>Genre:</label>\n          {/* INPUT BOX */}\n          <input type=\"text\"/>\n        </div>\n        {/* div 3 */}\n        <div className=\"field\">\n          {/* label */}\n          <label>Author:</label>\n          <select>\n            {/* MAPPING OF OPTIONS */}\n            <option>Select the author</option>\n            {\n            /* MAPPING THE DATA TO GET THE NAME OF THE AUTHORS */\n            \n            data.authors.map(({name,id})=>{\n            /* RETURN THE OPTIONS */\n            return <option key={id} value={id}>{name}</option>\n            })\n            }\n          </select>\n        </div>\n\n        <button>+</button>\n\n      </form>\n</div>\n)\n\n}\n\n\n/* EXPORT IT */\nexport default Addbook;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA;;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA;;AACA,SAAQC,eAAR,QAA8B,oBAA9B;AACA;;;;AACA,MAAMC,OAAO,GAAG,MAAK;EAAA;;EAErB,MAAK,CAACC,UAAD,EAAYC,QAAZ,IAAsBL,QAAQ,CAAC,IAAD,CAAnC;EAEA;;EACA,MAAM;IAAEM,OAAF;IAAWC,KAAX;IAAkBC;EAAlB,IAA2BP,QAAQ,CAACC,eAAD,CAAzC;EACA;;EACA,IAAII,OAAJ,EAAa,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;EACb;;EACA,IAAIC,KAAJ,EAAW,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;EAEX,oBACA;IAAA,uBAEA;MAAM,EAAE,EAAC,UAAT;MAAA,wBAEQ;QAAK,SAAS,EAAC,OAAf;QAAA,wBAEE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eAIE;UAAO,IAAI,EAAC;QAAZ;UAAA;UAAA;UAAA;QAAA,QAJF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFR,eASQ;QAAK,SAAS,EAAC,OAAf;QAAA,wBAEE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eAIE;UAAO,IAAI,EAAC;QAAZ;UAAA;UAAA;UAAA;QAAA,QAJF;MAAA;QAAA;QAAA;QAAA;MAAA,QATR,eAgBQ;QAAK,SAAS,EAAC,OAAf;QAAA,wBAEE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAA,wBAEE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF;UAIE;UAEAC,IAAI,CAACC,OAAL,CAAaC,GAAb,CAAiB,QAAa;YAAA,IAAZ;cAACC,IAAD;cAAMC;YAAN,CAAY;;YAC9B;YACA,oBAAO;cAAiB,KAAK,EAAEA,EAAxB;cAAA,UAA6BD;YAA7B,GAAaC,EAAb;cAAA;cAAA;cAAA;YAAA,QAAP;UACC,CAHD,CANF;QAAA;UAAA;UAAA;UAAA;QAAA,QAHF;MAAA;QAAA;QAAA;QAAA;MAAA,QAhBR,eAiCQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAjCR;IAAA;MAAA;MAAA;MAAA;IAAA;EAFA;IAAA;IAAA;IAAA;EAAA,QADA;AA0CC,CArDD;AAwDA;;;GAxDMT,O;UAK2BF,Q;;;KAL3BE,O;AAyDN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}