{"ast":null,"code":"var _jsxFileName = \"/home/pedromn35/Desktop/Back-end landscape/ninja-graphql/client/src/components/BookDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\n/* IMPORT OUR GQL */\n\nimport { useQuery } from '@apollo/client';\n/* OUR QUERY */\n\nimport { getBook } from '../queries/queries';\n/* BOOK DETAILS HOOK */\n\n/* THIS SELECTED ARGUMENT IS THE PROP THAT WE SEND BY THE BOOK LIST Component(THE PARENT) */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BookDetails = Selected => {\n  _s();\n\n  /*  THE QUERY THAT WE WANT TO USE */\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(getBook, {\n    variables: {\n      id: Selected.bookId.selected\n    }\n  });\n  console.log(data);\n  /* FUNCTION TO DISPLAY BOOKS IF THEY EXIST */\n\n  const display = () => {\n    /*  if there is data */\n    if (data) {\n      /* RETURN SOME JSX */\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: data.book.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: data.book.genre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: data.book.author.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"All books by this author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"other-books\",\n          children: data.book.author.books.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: item.name\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 11\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 2\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 2\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No book selected..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 3\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"book-details\",\n    children: display()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 10\n  }, this);\n};\n\n_s(BookDetails, \"gXmFNSedpJRXxM4kVrz3dgII6a0=\", false, function () {\n  return [useQuery];\n});\n\n_c = BookDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookDetails\");","map":{"version":3,"names":["React","Component","useQuery","getBook","BookDetails","Selected","loading","error","data","variables","id","bookId","selected","console","log","display","book","name","genre","author","books","map","item"],"sources":["/home/pedromn35/Desktop/Back-end landscape/ninja-graphql/client/src/components/BookDetails.js"],"sourcesContent":["import React, { Component } from 'react'\n\n/* IMPORT OUR GQL */\nimport {useQuery} from '@apollo/client';\n/* OUR QUERY */\nimport {getBook} from '../queries/queries'\n/* BOOK DETAILS HOOK */\n/* THIS SELECTED ARGUMENT IS THE PROP THAT WE SEND BY THE BOOK LIST Component(THE PARENT) */\nexport const BookDetails = (Selected) => {\n/*  THE QUERY THAT WE WANT TO USE */ \n const{loading , error , data}= useQuery(getBook,{\n     variables:{\n     id: Selected.bookId.selected\n     }\n });\n console.log(data);\n/* FUNCTION TO DISPLAY BOOKS IF THEY EXIST */\n const display = () =>{\n/*  if there is data */\n  if(data){\n/* RETURN SOME JSX */\n return(\n <div>\n <h2>{data.book.name}</h2> \n <p>{data.book.genre}</p> \n <p>{data.book.author.name}</p>\n <p>All books by this author</p>\n\n <ul className='other-books'>\n {\n   data.book.author.books.map(item =>{\n\n   return <li key={item.id}>\n   {item.name}  \n   </li>\n   })\n\n }\n </ul>  \n\n </div>  \n )\n }else{\n\n  return(\n  <div>No book selected..</div>\n  )\n\n }\n }\n  \n  return <div id='book-details'>{display()}</div>\n\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA;;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA;;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA;;AACA;;;AACA,OAAO,MAAMC,WAAW,GAAIC,QAAD,IAAc;EAAA;;EACzC;EACC,MAAK;IAACC,OAAD;IAAWC,KAAX;IAAmBC;EAAnB,IAA0BN,QAAQ,CAACC,OAAD,EAAS;IAC5CM,SAAS,EAAC;MACVC,EAAE,EAAEL,QAAQ,CAACM,MAAT,CAAgBC;IADV;EADkC,CAAT,CAAvC;EAKAC,OAAO,CAACC,GAAR,CAAYN,IAAZ;EACD;;EACC,MAAMO,OAAO,GAAG,MAAK;IACtB;IACE,IAAGP,IAAH,EAAQ;MACV;MACC,oBACA;QAAA,wBACA;UAAA,UAAKA,IAAI,CAACQ,IAAL,CAAUC;QAAf;UAAA;UAAA;UAAA;QAAA,QADA,eAEA;UAAA,UAAIT,IAAI,CAACQ,IAAL,CAAUE;QAAd;UAAA;UAAA;UAAA;QAAA,QAFA,eAGA;UAAA,UAAIV,IAAI,CAACQ,IAAL,CAAUG,MAAV,CAAiBF;QAArB;UAAA;UAAA;UAAA;QAAA,QAHA,eAIA;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJA,eAMA;UAAI,SAAS,EAAC,aAAd;UAAA,UAEET,IAAI,CAACQ,IAAL,CAAUG,MAAV,CAAiBC,KAAjB,CAAuBC,GAAvB,CAA2BC,IAAI,IAAG;YAElC,oBAAO;cAAA,UACNA,IAAI,CAACL;YADC,GAASK,IAAI,CAACZ,EAAd;cAAA;cAAA;cAAA;YAAA,QAAP;UAGC,CALD;QAFF;UAAA;UAAA;UAAA;QAAA,QANA;MAAA;QAAA;QAAA;QAAA;MAAA,QADA;IAqBC,CAvBA,MAuBI;MAEJ,oBACA;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADA;IAIA;EACA,CAhCD;;EAkCC,oBAAO;IAAK,EAAE,EAAC,cAAR;IAAA,UAAwBK,OAAO;EAA/B;IAAA;IAAA;IAAA;EAAA,QAAP;AAED,CA7CM;;GAAMX,W;UAEmBF,Q;;;KAFnBE,W"},"metadata":{},"sourceType":"module"}